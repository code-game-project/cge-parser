// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: schema.proto

package schema

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgType_Type int32

const (
	MsgType_METADATA   MsgType_Type = 0
	MsgType_DIAGNOSTIC MsgType_Type = 1
	MsgType_TOKEN      MsgType_Type = 2
	MsgType_OBJECT     MsgType_Type = 3
)

// Enum value maps for MsgType_Type.
var (
	MsgType_Type_name = map[int32]string{
		0: "METADATA",
		1: "DIAGNOSTIC",
		2: "TOKEN",
		3: "OBJECT",
	}
	MsgType_Type_value = map[string]int32{
		"METADATA":   0,
		"DIAGNOSTIC": 1,
		"TOKEN":      2,
		"OBJECT":     3,
	}
)

func (x MsgType_Type) Enum() *MsgType_Type {
	p := new(MsgType_Type)
	*p = x
	return p
}

func (x MsgType_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[0].Descriptor()
}

func (MsgType_Type) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[0]
}

func (x MsgType_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType_Type.Descriptor instead.
func (MsgType_Type) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0, 0}
}

type Diagnostic_Type int32

const (
	Diagnostic_INFO    Diagnostic_Type = 0
	Diagnostic_WARNING Diagnostic_Type = 1
	Diagnostic_ERROR   Diagnostic_Type = 2
)

// Enum value maps for Diagnostic_Type.
var (
	Diagnostic_Type_name = map[int32]string{
		0: "INFO",
		1: "WARNING",
		2: "ERROR",
	}
	Diagnostic_Type_value = map[string]int32{
		"INFO":    0,
		"WARNING": 1,
		"ERROR":   2,
	}
)

func (x Diagnostic_Type) Enum() *Diagnostic_Type {
	p := new(Diagnostic_Type)
	*p = x
	return p
}

func (x Diagnostic_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Diagnostic_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[1].Descriptor()
}

func (Diagnostic_Type) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[1]
}

func (x Diagnostic_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Diagnostic_Type.Descriptor instead.
func (Diagnostic_Type) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{2, 0}
}

type Token_Type int32

const (
	Token_TTGameName      Token_Type = 0
	Token_TTCGEVersion    Token_Type = 1
	Token_TTConfig        Token_Type = 2
	Token_TTCommand       Token_Type = 3
	Token_TTEvent         Token_Type = 4
	Token_TTType          Token_Type = 5
	Token_TTEnum          Token_Type = 6
	Token_TTString        Token_Type = 7
	Token_TTBool          Token_Type = 8
	Token_TTInt32         Token_Type = 9
	Token_TTInt64         Token_Type = 10
	Token_TTFloat32       Token_Type = 11
	Token_TTFloat64       Token_Type = 12
	Token_TTMap           Token_Type = 13
	Token_TTList          Token_Type = 14
	Token_TTIdentifier    Token_Type = 15
	Token_TTVersionNumber Token_Type = 16
	Token_TTOpenCurly     Token_Type = 17
	Token_TTCloseCurly    Token_Type = 18
	Token_TTColon         Token_Type = 19
	Token_TTComma         Token_Type = 20
	Token_TTGreater       Token_Type = 21
	Token_TTLess          Token_Type = 22
	Token_TTComment       Token_Type = 23
	Token_TTError         Token_Type = 24
	Token_TTEOF           Token_Type = 25
)

// Enum value maps for Token_Type.
var (
	Token_Type_name = map[int32]string{
		0:  "TTGameName",
		1:  "TTCGEVersion",
		2:  "TTConfig",
		3:  "TTCommand",
		4:  "TTEvent",
		5:  "TTType",
		6:  "TTEnum",
		7:  "TTString",
		8:  "TTBool",
		9:  "TTInt32",
		10: "TTInt64",
		11: "TTFloat32",
		12: "TTFloat64",
		13: "TTMap",
		14: "TTList",
		15: "TTIdentifier",
		16: "TTVersionNumber",
		17: "TTOpenCurly",
		18: "TTCloseCurly",
		19: "TTColon",
		20: "TTComma",
		21: "TTGreater",
		22: "TTLess",
		23: "TTComment",
		24: "TTError",
		25: "TTEOF",
	}
	Token_Type_value = map[string]int32{
		"TTGameName":      0,
		"TTCGEVersion":    1,
		"TTConfig":        2,
		"TTCommand":       3,
		"TTEvent":         4,
		"TTType":          5,
		"TTEnum":          6,
		"TTString":        7,
		"TTBool":          8,
		"TTInt32":         9,
		"TTInt64":         10,
		"TTFloat32":       11,
		"TTFloat64":       12,
		"TTMap":           13,
		"TTList":          14,
		"TTIdentifier":    15,
		"TTVersionNumber": 16,
		"TTOpenCurly":     17,
		"TTCloseCurly":    18,
		"TTColon":         19,
		"TTComma":         20,
		"TTGreater":       21,
		"TTLess":          22,
		"TTComment":       23,
		"TTError":         24,
		"TTEOF":           25,
	}
)

func (x Token_Type) Enum() *Token_Type {
	p := new(Token_Type)
	*p = x
	return p
}

func (x Token_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Token_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[2].Descriptor()
}

func (Token_Type) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[2]
}

func (x Token_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Token_Type.Descriptor instead.
func (Token_Type) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{3, 0}
}

type Object_Type int32

const (
	Object_CONFIG  Object_Type = 0
	Object_COMMAND Object_Type = 1
	Object_EVENT   Object_Type = 2
	Object_TYPE    Object_Type = 3
	Object_ENUM    Object_Type = 4
)

// Enum value maps for Object_Type.
var (
	Object_Type_name = map[int32]string{
		0: "CONFIG",
		1: "COMMAND",
		2: "EVENT",
		3: "TYPE",
		4: "ENUM",
	}
	Object_Type_value = map[string]int32{
		"CONFIG":  0,
		"COMMAND": 1,
		"EVENT":   2,
		"TYPE":    3,
		"ENUM":    4,
	}
)

func (x Object_Type) Enum() *Object_Type {
	p := new(Object_Type)
	*p = x
	return p
}

func (x Object_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Object_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[3].Descriptor()
}

func (Object_Type) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[3]
}

func (x Object_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Object_Type.Descriptor instead.
func (Object_Type) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{5, 0}
}

type Property_Type_DataType int32

const (
	Property_Type_STRING     Property_Type_DataType = 0
	Property_Type_BOOL       Property_Type_DataType = 1
	Property_Type_INT32      Property_Type_DataType = 2
	Property_Type_INT64      Property_Type_DataType = 3
	Property_Type_FLOAT32    Property_Type_DataType = 4
	Property_Type_FLOAT64    Property_Type_DataType = 5
	Property_Type_MAP        Property_Type_DataType = 6
	Property_Type_LIST       Property_Type_DataType = 7
	Property_Type_ENUM_VALUE Property_Type_DataType = 8
	Property_Type_CUSTOM     Property_Type_DataType = 9
)

// Enum value maps for Property_Type_DataType.
var (
	Property_Type_DataType_name = map[int32]string{
		0: "STRING",
		1: "BOOL",
		2: "INT32",
		3: "INT64",
		4: "FLOAT32",
		5: "FLOAT64",
		6: "MAP",
		7: "LIST",
		8: "ENUM_VALUE",
		9: "CUSTOM",
	}
	Property_Type_DataType_value = map[string]int32{
		"STRING":     0,
		"BOOL":       1,
		"INT32":      2,
		"INT64":      3,
		"FLOAT32":    4,
		"FLOAT64":    5,
		"MAP":        6,
		"LIST":       7,
		"ENUM_VALUE": 8,
		"CUSTOM":     9,
	}
)

func (x Property_Type_DataType) Enum() *Property_Type_DataType {
	p := new(Property_Type_DataType)
	*p = x
	return p
}

func (x Property_Type_DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Property_Type_DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[4].Descriptor()
}

func (Property_Type_DataType) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[4]
}

func (x Property_Type_DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Property_Type_DataType.Descriptor instead.
func (Property_Type_DataType) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{6, 0, 0}
}

type MsgType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MsgType_Type `protobuf:"varint,1,opt,name=type,proto3,enum=cgeparser.MsgType_Type" json:"type,omitempty"`
}

func (x *MsgType) Reset() {
	*x = MsgType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgType) ProtoMessage() {}

func (x *MsgType) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgType.ProtoReflect.Descriptor instead.
func (*MsgType) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0}
}

func (x *MsgType) GetType() MsgType_Type {
	if x != nil {
		return x.Type
	}
	return MsgType_METADATA
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CgeVersion string `protobuf:"bytes,1,opt,name=cge_version,json=cgeVersion,proto3" json:"cge_version,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{1}
}

func (x *Metadata) GetCgeVersion() string {
	if x != nil {
		return x.CgeVersion
	}
	return ""
}

type Diagnostic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Diagnostic_Type `protobuf:"varint,1,opt,name=type,proto3,enum=cgeparser.Diagnostic_Type" json:"type,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// inclusive
	Start *Pos `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	// exclusive
	End *Pos `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Diagnostic) Reset() {
	*x = Diagnostic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diagnostic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnostic) ProtoMessage() {}

func (x *Diagnostic) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnostic.ProtoReflect.Descriptor instead.
func (*Diagnostic) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{2}
}

func (x *Diagnostic) GetType() Diagnostic_Type {
	if x != nil {
		return x.Type
	}
	return Diagnostic_INFO
}

func (x *Diagnostic) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Diagnostic) GetStart() *Pos {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Diagnostic) GetEnd() *Pos {
	if x != nil {
		return x.End
	}
	return nil
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   Token_Type `protobuf:"varint,1,opt,name=type,proto3,enum=cgeparser.Token_Type" json:"type,omitempty"`
	Lexeme string     `protobuf:"bytes,2,opt,name=lexeme,proto3" json:"lexeme,omitempty"`
	Pos    *Pos       `protobuf:"bytes,3,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{3}
}

func (x *Token) GetType() Token_Type {
	if x != nil {
		return x.Type
	}
	return Token_TTGameName
}

func (x *Token) GetLexeme() string {
	if x != nil {
		return x.Lexeme
	}
	return ""
}

func (x *Token) GetPos() *Pos {
	if x != nil {
		return x.Pos
	}
	return nil
}

type Pos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line   int32 `protobuf:"varint,1,opt,name=line,proto3" json:"line,omitempty"`
	Column int32 `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"`
}

func (x *Pos) Reset() {
	*x = Pos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos) ProtoMessage() {}

func (x *Pos) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos.ProtoReflect.Descriptor instead.
func (*Pos) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{4}
}

func (x *Pos) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *Pos) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       Object_Type `protobuf:"varint,1,opt,name=type,proto3,enum=cgeparser.Object_Type" json:"type,omitempty"`
	Name       string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Properties []*Property `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty"`
	Comment    *string     `protobuf:"bytes,4,opt,name=comment,proto3,oneof" json:"comment,omitempty"`
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{5}
}

func (x *Object) GetType() Object_Type {
	if x != nil {
		return x.Type
	}
	return Object_CONFIG
}

func (x *Object) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Object) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Object) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

type Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type    *Property_Type `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Comment *string        `protobuf:"bytes,3,opt,name=comment,proto3,oneof" json:"comment,omitempty"`
}

func (x *Property) Reset() {
	*x = Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{6}
}

func (x *Property) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Property) GetType() *Property_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Property) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

type Property_Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type    Property_Type_DataType `protobuf:"varint,2,opt,name=type,proto3,enum=cgeparser.Property_Type_DataType" json:"type,omitempty"`
	Generic *Property_Type         `protobuf:"bytes,3,opt,name=generic,proto3" json:"generic,omitempty"`
}

func (x *Property_Type) Reset() {
	*x = Property_Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property_Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property_Type) ProtoMessage() {}

func (x *Property_Type) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property_Type.ProtoReflect.Descriptor instead.
func (*Property_Type) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Property_Type) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Property_Type) GetType() Property_Type_DataType {
	if x != nil {
		return x.Type
	}
	return Property_Type_STRING
}

func (x *Property_Type) GetGeneric() *Property_Type {
	if x != nil {
		return x.Generic
	}
	return nil
}

var File_schema_proto protoreflect.FileDescriptor

var file_schema_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x63, 0x67, 0x65, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x22, 0x75, 0x0a, 0x08, 0x6d, 0x73, 0x67,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x67, 0x65, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x3b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x4d,
	0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x41,
	0x47, 0x4e, 0x4f, 0x53, 0x54, 0x49, 0x43, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x4f, 0x4b,
	0x45, 0x4e, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x03,
	0x22, 0x2b, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x01,
	0x0a, 0x0a, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x12, 0x2e, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x67, 0x65,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x24,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x63, 0x67, 0x65, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x67, 0x65, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6f,
	0x73, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02,
	0x22, 0xe8, 0x03, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x67, 0x65, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x78, 0x65, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x78, 0x65, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x67, 0x65,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22,
	0xf9, 0x02, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x54, 0x47, 0x61,
	0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x54, 0x43, 0x47,
	0x45, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x54,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x54, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x54, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x54, 0x54, 0x79, 0x70, 0x65, 0x10, 0x05,
	0x12, 0x0a, 0x0a, 0x06, 0x54, 0x54, 0x45, 0x6e, 0x75, 0x6d, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08,
	0x54, 0x54, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x54,
	0x42, 0x6f, 0x6f, 0x6c, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x54, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x54, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x10, 0x0a,
	0x12, 0x0d, 0x0a, 0x09, 0x54, 0x54, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x32, 0x10, 0x0b, 0x12,
	0x0d, 0x0a, 0x09, 0x54, 0x54, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x10, 0x0c, 0x12, 0x09,
	0x0a, 0x05, 0x54, 0x54, 0x4d, 0x61, 0x70, 0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x54, 0x4c,
	0x69, 0x73, 0x74, 0x10, 0x0e, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x54, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x10, 0x0f, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x54, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x10, 0x12, 0x0f, 0x0a, 0x0b,
	0x54, 0x54, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x75, 0x72, 0x6c, 0x79, 0x10, 0x11, 0x12, 0x10, 0x0a,
	0x0c, 0x54, 0x54, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x75, 0x72, 0x6c, 0x79, 0x10, 0x12, 0x12,
	0x0b, 0x0a, 0x07, 0x54, 0x54, 0x43, 0x6f, 0x6c, 0x6f, 0x6e, 0x10, 0x13, 0x12, 0x0b, 0x0a, 0x07,
	0x54, 0x54, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x10, 0x14, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x54, 0x47,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x10, 0x15, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x54, 0x4c, 0x65,
	0x73, 0x73, 0x10, 0x16, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x54, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x10, 0x17, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x18,
	0x12, 0x09, 0x0a, 0x05, 0x54, 0x54, 0x45, 0x4f, 0x46, 0x10, 0x19, 0x22, 0x31, 0x0a, 0x03, 0x50,
	0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0xe8,
	0x01, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x67, 0x65, 0x70, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x67, 0x65, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1d,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x22, 0x3e, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x59, 0x50,
	0x45, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x4e, 0x55, 0x4d, 0x10, 0x04, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x80, 0x03, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x67, 0x65, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x1a, 0x86, 0x02, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x67, 0x65, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x67, 0x65, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x22,
	0x7f, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05,
	0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54,
	0x33, 0x32, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x36, 0x34, 0x10,
	0x05, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x50, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49,
	0x53, 0x54, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x56, 0x41, 0x4c,
	0x55, 0x45, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x09,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x13, 0x5a, 0x11,
	0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schema_proto_rawDescOnce sync.Once
	file_schema_proto_rawDescData = file_schema_proto_rawDesc
)

func file_schema_proto_rawDescGZIP() []byte {
	file_schema_proto_rawDescOnce.Do(func() {
		file_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_proto_rawDescData)
	})
	return file_schema_proto_rawDescData
}

var file_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_schema_proto_goTypes = []interface{}{
	(MsgType_Type)(0),           // 0: cgeparser.msg_type.Type
	(Diagnostic_Type)(0),        // 1: cgeparser.Diagnostic.Type
	(Token_Type)(0),             // 2: cgeparser.Token.Type
	(Object_Type)(0),            // 3: cgeparser.Object.Type
	(Property_Type_DataType)(0), // 4: cgeparser.Property.Type.DataType
	(*MsgType)(nil),             // 5: cgeparser.msg_type
	(*Metadata)(nil),            // 6: cgeparser.Metadata
	(*Diagnostic)(nil),          // 7: cgeparser.Diagnostic
	(*Token)(nil),               // 8: cgeparser.Token
	(*Pos)(nil),                 // 9: cgeparser.Pos
	(*Object)(nil),              // 10: cgeparser.Object
	(*Property)(nil),            // 11: cgeparser.Property
	(*Property_Type)(nil),       // 12: cgeparser.Property.Type
}
var file_schema_proto_depIdxs = []int32{
	0,  // 0: cgeparser.msg_type.type:type_name -> cgeparser.msg_type.Type
	1,  // 1: cgeparser.Diagnostic.type:type_name -> cgeparser.Diagnostic.Type
	9,  // 2: cgeparser.Diagnostic.start:type_name -> cgeparser.Pos
	9,  // 3: cgeparser.Diagnostic.end:type_name -> cgeparser.Pos
	2,  // 4: cgeparser.Token.type:type_name -> cgeparser.Token.Type
	9,  // 5: cgeparser.Token.pos:type_name -> cgeparser.Pos
	3,  // 6: cgeparser.Object.type:type_name -> cgeparser.Object.Type
	11, // 7: cgeparser.Object.properties:type_name -> cgeparser.Property
	12, // 8: cgeparser.Property.type:type_name -> cgeparser.Property.Type
	4,  // 9: cgeparser.Property.Type.type:type_name -> cgeparser.Property.Type.DataType
	12, // 10: cgeparser.Property.Type.generic:type_name -> cgeparser.Property.Type
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_schema_proto_init() }
func file_schema_proto_init() {
	if File_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diagnostic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property_Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_schema_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_schema_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_proto_goTypes,
		DependencyIndexes: file_schema_proto_depIdxs,
		EnumInfos:         file_schema_proto_enumTypes,
		MessageInfos:      file_schema_proto_msgTypes,
	}.Build()
	File_schema_proto = out.File
	file_schema_proto_rawDesc = nil
	file_schema_proto_goTypes = nil
	file_schema_proto_depIdxs = nil
}
